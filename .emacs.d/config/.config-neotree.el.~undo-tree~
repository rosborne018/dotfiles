"35ee5d6b3dae282955933cd28b2b876cb1f1c26f"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((124 . 125) (#("zh" 0 2 (fontified t face font-lock-string-face)) . 124) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 125 (t 23184 23804 992967 700000)) nil (23184 23842 141621 469000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id122 . 1) (t 23184 23799 749002 508000)) nil (23184 23804 987376 334000) 0 nil]) ((189 . 190)) nil (23184 23799 741025 366000) 0 nil]) ((189 . 207)) nil (23184 23799 741041 847000) 0 nil]) ((131 . 157) (#("neotree-hi" 0 10 (fontified t)) . -131) (undo-tree-id52 . -10) (undo-tree-id53 . -3) (undo-tree-id54 . -7) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id57 . -10) 141 (137 . 141) (134 . 137) (#("-" 0 1 (fontified t)) . -134) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 135 (131 . 135)) nil (23184 23799 741122 481000) 0 nil]) ((130 . 131) (#(" " 0 1 (fontified nil)) . -130) (130 . 131) (#("'" 0 1 (fontified nil)) . -130) (129 . 131)) nil (23184 23799 741143 999000) 0 nil]) ((125 . 127) (#("I" 0 1 (fontified t face font-lock-string-face)) . -125) (undo-tree-id62 . -1) 126 (125 . 126) (124 . 126) (#("\"" 0 1 (fontified nil)) . -124) (120 . 125) (119 . 121) (#("(" 0 1 (fontified nil)) . -119) (119 . 120) (118 . 119)) nil (23184 23799 741169 772000) 0 nil]) ((115 . 118) (#("h" 0 1 (fontified t)) . -115) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("o" 0 1 (fontified t)) . -116) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("o" 0 1 (fontified t)) . -117) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("k" 0 1 (fontified t)) . -118) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 119 (nil fontified nil 107 . 119) (#("neotree-mode" 0 12 (fontified nil)) . -102) (114 . 131) 114 (#("neotree-mode-abbrev-table" 0 25 (fontified nil)) . 114) (undo-tree-id83 . -25) (undo-tree-id84 . -25) (undo-tree-id85 . -25) (undo-tree-id86 . -25) (102 . 114) 127 (nil fontified t 110 . 127) (#("neotree-mode-hook" 0 17 (fontified t)) . -102) (119 . 144) 119 (#("neotree-mode" 0 12 (fontified t)) . -102) (114 . 131) 114 (111 . 114) (91 . 111) (90 . 92) (#("(" 0 1 (fontified nil)) . -90) (90 . 91) (87 . 90) (#(")" 0 1 (fontified nil)) . 87) (86 . 87) (85 . 87) (#("(" 0 1 (fontified nil)) . -85) (74 . 86) (63 . 74) (#("o" 0 1 (fontified t)) . -63) (undo-tree-id87 . -1) 64 (60 . 64) (59 . 61) (#("(" 0 1 (fontified nil)) . -59) (59 . 60) (59 . 60) 87) nil (23184 23799 741420 713000) 0 nil]) ((83 . 88) (#("o" 0 1 (fontified t)) . -83) (undo-tree-id88 . -1) 84 (82 . 84) (nil fontified t 70 . 82) (#("neotree-mode-hook" 0 17 (fontified t)) . -70) (87 . 99) 87 (#("neotree-mo" 0 10 (fontified nil)) . -70) (80 . 97) 80 (77 . 80) (#("0" 0 1 (fontified t)) . -77) (undo-tree-id89 . -1) 78 (77 . 78) (#(" " 0 1 (fontified t)) . -77) (undo-tree-id90 . -1) (#("m" 0 1 (fontified t)) . -78) (undo-tree-id91 . -1) (#("o" 0 1 (fontified t)) . -79) (undo-tree-id92 . -1) 80 (69 . 80) (#(" " 0 1 (fontified nil)) . -69) (69 . 70) (#("'" 0 1 (fontified nil)) . -69) (60 . 70)) nil (23184 23799 741502 995000) 0 nil]) ((#("l" 0 1 (fontified t)) . -60) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("o" 0 1 (fontified t)) . -61) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("c" 0 1 (fontified t)) . -62) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("a" 0 1 (fontified t)) . -63) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("l" 0 1 (fontified t)) . -64) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("l" 0 1 (fontified t)) . -65) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("l" 0 1 (fontified t)) . -66) (undo-tree-id117 . -1) 67 (64 . 67) (#("k" 0 1 (fontified t)) . -64) (undo-tree-id118 . -1) (#("l" 0 1 (fontified t)) . -65) (undo-tree-id119 . -1) 66 (62 . 66) (#("a" 0 1 (fontified t)) . -62) (undo-tree-id120 . -1) (#("d" 0 1 (fontified t)) . -63) (undo-tree-id121 . -1) 64 (60 . 64) (59 . 61) (#("(" 0 1 (fontified nil)) . -59) (59 . 60) (58 . 59) (t 23184 23575 894492 681000) 21) nil (23184 23799 741717 45000) 0 nil]) ((1 . 2) (t 23184 23553 630641 435000)) nil (23184 23575 892790 223000) 0 nil]) ((84 . 85)) nil (23184 23553 630101 241000) 0 nil]) ((#("
" 0 1 (fontified t)) . -84) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 85) nil (23184 23553 630122 142000) 0 nil]) ((#("
" 0 1 (fontified t)) . -85) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 86 (t 23184 23551 890653 66000)) nil (23184 23553 630136 699000) 0 nil]) ((#("(provide 'config-neotree)
" 0 1 (fontified t) 1 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t) 10 24 (fontified t face font-lock-constant-face) 24 25 (fontified t) 25 26 (fontified t)) . 86) (undo-tree-id26 . 2) (undo-tree-id27 . -26) (undo-tree-id28 . -26) (undo-tree-id29 . -26) (undo-tree-id30 . -26) (undo-tree-id31 . -26) (undo-tree-id32 . -17) (undo-tree-id33 . -23) (undo-tree-id34 . -25) 109) nil (23184 23551 892514 465000) 0 nil]) ((100 . 110) (#("f" 0 1 (fontified t face font-lock-constant-face)) . -100) (undo-tree-id35 . -1) (#("i" 0 1 (fontified t face font-lock-constant-face)) . -101) (undo-tree-id36 . -1) (#("g" 0 1 (fontified t face font-lock-constant-face)) . -102) (undo-tree-id37 . -1) 103 (95 . 103) (#(" " 0 1 (fontified nil)) . -95) (95 . 96) (#("'" 0 1 (fontified nil)) . -95) (87 . 96) (86 . 88) (#("(" 0 1 (fontified nil)) . -86) (86 . 87) (85 . 86) (84 . 85) (t 23184 23536 574755 471000) 59) nil (23184 23551 892526 455000) 0 nil]) ((#("
" 0 1 (fontified t)) . 85) (undo-tree-id16 . 1) (undo-tree-id17 . 1)) nil (23184 23536 572930 556000) 0 nil]) ((#("neon-mode" 0 9 (fontified t)) . 85) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -9) (undo-tree-id21 . -9) (undo-tree-id22 . -8) (undo-tree-id23 . -8) 93) nil (23184 23536 572979 803000) 0 nil]) ((#("v" 0 1 (fontified t)) . 94)) nil (23184 23536 572995 761000) 0 nil]) ((88 . 95) (#("o" 0 1 (fontified t)) . -88) (undo-tree-id24 . -1) (#("n" 0 1 (fontified t)) . -89) (undo-tree-id25 . -1) 90 (85 . 90) (84 . 85) (t 23184 23218 20901 370000) 82) nil (23184 23536 573033 364000) 0 nil]) ((79 . 83) (#("-" 0 1 (fontified t face font-lock-constant-face)) . -79) (undo-tree-id12 . -1) (#("t" 0 1 (fontified t face font-lock-constant-face)) . -80) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t face font-lock-constant-face)) . -81) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -82) (undo-tree-id15 . -1) 83 (69 . 83) (68 . 69) (#(" " 0 1 (fontified nil)) . -68) (68 . 69) (#("'" 0 1 (fontified nil)) . -68) (60 . 69) (59 . 61) (#("(" 0 1 (fontified nil)) . -59) (59 . 60) (58 . 59) (57 . 58) (t 23184 23204 588992 692000) 20) nil (23184 23218 16825 680000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 57) (undo-tree-id5 . 1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("(" 0 1 (fontified t)) . 20) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) nil (23184 23204 579697 549000) 0 nil]) ((21 . 58) 20) nil (23184 23204 579716 437000) 0 nil]) ((20 . 22) (#("(" 0 1 (fontified nil)) . -20) (20 . 21) (19 . 20) (t 23184 23181 957146 756000) 17) nil (23184 23204 579729 297000) 0 nil]) ((19 . 20)) nil (23184 23181 953738 541000) 0 nil]) ((11 . 18) (#("neot" 0 4 (fontified t face font-lock-constant-face)) . -11) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) 15 (10 . 15) (#(" " 0 1 (fontified nil)) . -10) (10 . 11) (#("'" 0 1 (fontified nil)) . -10) (2 . 11) (1 . 3) (#("(" 0 1 (fontified nil)) . -1) (1 . 2) (t . -1)) nil (23184 23181 953800 122000) 0 nil]) nil nil (23184 23181 953813 193000) 0 nil] #1# 2820 26 nil]